diff --git a/Makefile b/Makefile
index 5cfc763..deeff0c 100644
--- a/Makefile
+++ b/Makefile
@@ -368,9 +368,16 @@ gen_build_files: $(wildcard $(srctree)/*/*.c) $(wildcard $(srctree)/*/*/*.c)
 # we depend on scripts_basic, since scripts/basic/fixdep
 # must be built before any other host prog
 PHONY += applets_dir
+ifeq ("YBUILD", "YBUILD")
 applets_dir: scripts_basic gen_build_files
 	$(Q)$(MAKE) $(build)=applets
 
+else
+applets_dir: scripts_basic gen_build_files
+	$(Q)$(MAKE) $(build)=applets
+
+endif
+
 applets/%: applets_dir ;
 
 PHONY += outputmakefile
@@ -464,33 +471,8 @@ core-y		:= \
 		applets/ \
 
 libs-y		:= \
-		archival/ \
-		archival/libarchive/ \
-		console-tools/ \
 		coreutils/ \
-		coreutils/libcoreutils/ \
-		debianutils/ \
-		e2fsprogs/ \
-		editors/ \
-		findutils/ \
-		init/ \
 		libbb/ \
-		libpwdgrp/ \
-		loginutils/ \
-		mailutils/ \
-		miscutils/ \
-		modutils/ \
-		networking/ \
-		networking/libiproute/ \
-		networking/udhcp/ \
-		printutils/ \
-		procps/ \
-		runit/ \
-		selinux/ \
-		shell/ \
-		sysklogd/ \
-		util-linux/ \
-		util-linux/volume_id/ \
 
 endif # KBUILD_EXTMOD
 
@@ -713,10 +695,20 @@ debug_kallsyms: .tmp_map$(last_kallsyms)
 endif # ifdef CONFIG_KALLSYMS
 
 # busybox image - including updated kernel symbols
+ifeq ("YBUILD", "YBUILD")
+busybox_unstripped: $(busybox-all) FORCE
+
+else
 busybox_unstripped: $(busybox-all) FORCE
 	$(call if_changed_rule,busybox__)
 	$(Q)rm -f .old_version
 
+endif
+
+ifeq ("YBUILD", "YBUILD")
+busybox: busybox_unstripped
+
+else
 busybox: busybox_unstripped
 ifeq ($(SKIP_STRIP),y)
 	$(Q)cp $< $@
@@ -727,6 +719,8 @@ else
 	$(Q)chmod a+x $@
 endif
 
+endif
+
 # The actual objects are generated when descending,
 # make sure no implicit rule kicks in
 $(sort $(busybox-all)): $(busybox-dirs) ;
@@ -820,7 +814,7 @@ ifneq ($(KBUILD_MODULES),)
 	$(Q)rm -f $(MODVERDIR)/*
 endif
 
-archprepare: prepare1 scripts_basic applets_dir
+archprepare: prepare1 scripts_basic
 
 prepare0: archprepare FORCE
 	$(Q)$(MAKE) $(build)=.
diff --git a/Makefile.custom b/Makefile.custom
index 891c9ce..9179fcb 100644
--- a/Makefile.custom
+++ b/Makefile.custom
@@ -134,6 +134,19 @@ disp_doc       = $($(quiet)cmd_doc)
 
 # sed adds newlines after "Options:" etc,
 # this is needed in order to get good BusyBox.{1,txt,html}
+ifeq ("YBUILD", "YBUILD")
+docs/busybox.pod: $(srctree)/docs/busybox_header.pod \
+		include/usage.h \
+		$(srctree)/docs/busybox_footer.pod
+	$(disp_doc)
+	$(Q)-mkdir -p docs
+	$(Q)-( \
+	    cat $(srctree)/docs/busybox_header.pod; \
+	    echo; \
+	    cat $(srctree)/docs/busybox_footer.pod; \
+	    ) > docs/busybox.pod
+
+else
 docs/busybox.pod: $(srctree)/docs/busybox_header.pod \
 		include/usage.h \
 		$(srctree)/docs/busybox_footer.pod \
@@ -147,6 +160,8 @@ docs/busybox.pod: $(srctree)/docs/busybox_header.pod \
 	    cat $(srctree)/docs/busybox_footer.pod; \
 	    ) > docs/busybox.pod
 
+endif
+
 docs/BusyBox.txt: docs/busybox.pod
 	$(disp_doc)
 	$(Q)-mkdir -p docs
diff --git a/include/platform.h b/include/platform.h
index c987d41..449e88d 100644
--- a/include/platform.h
+++ b/include/platform.h
@@ -501,6 +501,10 @@ typedef unsigned smalluint;
 # undef HAVE_NET_ETHERNET_H
 #endif
 
+#if defined(IOS)
+# undef HAVE_MEMPCPY
+#endif
+
 /*
  * Now, define prototypes for all the functions defined in platform.c
  * These must come after all the HAVE_* macros are defined (or not)
diff --git a/libbb/Kbuild.src b/libbb/Kbuild.src
index 52a90e9..5ff8395 100644
--- a/libbb/Kbuild.src
+++ b/libbb/Kbuild.src
@@ -45,17 +45,20 @@ lib-y += getpty.o
 lib-y += get_volsize.o
 lib-y += herror_msg.o
 lib-y += human_readable.o
-lib-y += inet_common.o
+# YBUILD
+#lib-y += inet_common.o
 lib-y += inode_hash.o
 lib-y += isdirectory.o
 lib-y += kernel_version.o
 lib-y += last_char_is.o
-lib-y += lineedit.o lineedit_ptr_hack.o
+# YBUILD
+#lib-y += lineedit.o lineedit_ptr_hack.o
 lib-y += llist.o
 lib-y += login.o
 lib-y += make_directory.o
 lib-y += makedev.o
-lib-y += hash_md5_sha.o
+# YBUILD
+#lib-y += hash_md5_sha.o
 # Alternative (disabled) MD5 implementation
 #lib-y += hash_md5prime.o
 lib-y += messages.o
@@ -92,7 +95,8 @@ lib-y += speed_table.o
 lib-y += str_tolower.o
 lib-y += strrstr.o
 lib-y += sysconf.o
-lib-y += time.o
+# YBUILD
+#lib-y += time.o
 lib-y += trim.o
 lib-y += u_signal_names.o
 lib-y += uuencode.o
@@ -104,7 +108,8 @@ lib-y += wfopen.o
 lib-y += wfopen_input.o
 lib-y += write.o
 lib-y += xatonum.o
-lib-y += xconnect.o
+# YBUILD
+#lib-y += xconnect.o
 lib-y += xfuncs.o
 lib-y += xfuncs_printf.o
 lib-y += xfunc_die.o
diff --git a/scripts/Makefile.build b/scripts/Makefile.build
index 5eac45f..35f0dcc 100644
--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -256,10 +256,18 @@ ifdef builtin-target
 quiet_cmd_link_o_target = LD      $@
 # If the list of objects to link is empty, just create an empty built-in.o
 # -nostdlib is added to make "make LD=gcc ..." work (some people use that)
+ifeq ("YBUILD", "YBUILD")
+cmd_link_o_target = $(if $(strip $(obj-y)),\
+		$(LD) -nostdlib $(ld_flags) -r -o $@ $(filter $(obj-y), $^),\
+		rm -f $@; touch -f $@)
+
+else
 cmd_link_o_target = $(if $(strip $(obj-y)),\
 		$(LD) -nostdlib $(ld_flags) -r -o $@ $(filter $(obj-y), $^),\
 		rm -f $@; $(AR) rcs $@)
 
+endif
+
 $(builtin-target): $(obj-y) FORCE
 	$(call if_changed,link_o_target)
 
